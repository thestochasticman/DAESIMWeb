services:
  backend:
    ports:
      - "2000:2000"  
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: daesim-backend
    environment:
      PYTHONUNBUFFERED: "1"
      ALLOWED_ORIGINS: "http://localhost:2000,http://127.0.0.1:2000"
    volumes:
      - ./Backend:/app/Backend
      - /borevitz_projects/data/:/borevitz_projects/data/          # persist generated artifacts/results

    restart: always
    networks:
      - edge

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        NEXT_PUBLIC_API_URL: /DAESIM/api
        NEXT_BASEPATH: /DAESIM
    container_name: daesim-frontend
    environment:
      NODE_ENV: production
    restart: always
    networks:
      - edge
    # volumes:
    #   - ./frontend:/app/frontend
    #   - /app/frontend/node_modules

  # caddy:
  #   image: caddy:2
  #   container_name: paddock-caddy
  #   depends_on: [frontend, backend]
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./ops/Caddyfile:/etc/caddy/Caddyfile:ro
  #     - caddy_data:/data
  #     - caddy_config:/config
  #   environment:
  #     DOMAIN: http://130.56.246.157   # e.g., app.example.com
  #   restart: always
  #   networks:
  #     - default
  #     - edge

volumes:
  caddy_data:
  caddy_config:

networks:
  edge:
    external: true
